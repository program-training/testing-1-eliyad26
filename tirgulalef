//eliya duek testing alef 26/09

//1

export const lenstr = (str: string) => {
  return str.length;
};

//2
export const isPoly = (str: string) => {
  const goodstr = str.split("");
  const reversed = goodstr.reverse();
  const result = reversed.join("");
  if (result === str) {
    return true;
  } else if (str !== result) {
    return false;
  }
};
//3
export const sortUp = (nums: number[]) => {
  return nums.sort();
};
//4
export const sqrt = (num: number) => {
  if (num < 0) {
    throw new Error("לא ניתן לחשב שורש ריבועי של מספר שלילי");
  }
  return num ** 0.5;
};
//5
export const sumnums = (nums: number[]) => {
  let sum = 0;
  for (let i = 0; i < nums.length; i++) {
    sum += nums[i];
  }
  return sum;
};
//6
export const fetchUserData = async (_id: number) => {
  try {
    const response = await fetch(
      `https://jsonplaceholder.typicode.com/users/${_id}`
    );
    if (!response.ok) {
      throw new Error(`Failed to fetch data: ${response.statusText}`);
    }
    return response.json();
  } catch (err) {
    console.error(err);
    throw err;
  }
};

export const fibonacii = (nums: number[]) => {
  try {
    let i = 0;
    while (i < nums.length - 2) {
      if (nums[i] + nums[i + 1] === nums[i + 2]) {
        i++;
      } else throw new Error("this is an ERROR");
    }
    const num1 = nums.length - 1;
    const num2 = nums.length - 2;
    const result = nums[num1] + nums[num2];
    return result;
  } catch (err) {
    console.error(err);
    throw err;
  }
};
